@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

/*============================================================================
  #Media Query Mixin
==============================================================================*/

@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $grid-breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}

/*============================================================================
  Flexbox prefix mixins from Bourbon
    https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_flex-box.scss
==============================================================================*/
@mixin display-flexbox() {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%; // necessary for ie10
}

@mixin flex-wrap($value: nowrap) {
  @include prefix(flex-wrap, $value, webkit moz ms spec);
}

@mixin flex-direction($value) {
  @include prefix(flex-direction, $value, webkit moz ms spec);
}

@mixin align-items($value: stretch) {
  $alt-value: $value;

  @if $value == "flex-start" {
    $alt-value: start;
  } @else if $value == "flex-end" {
    $alt-value: end;
  }

  // sass-lint:disable no-misspelled-properties
  -ms-flex-align: $alt-value;
  @include prefix(align-items, $value, webkit moz ms o spec);
}

@mixin flex($value) {
  @include prefix(flex, $value, webkit moz ms spec);
}

@mixin flex-basis($width: auto) {
  // sass-lint:disable no-misspelled-properties
  -ms-flex-preferred-size: $width;
  @include prefix(flex-basis, $width, webkit moz spec);
}

@mixin align-self($align: auto) {
  // sass-lint:disable no-misspelled-properties
  -ms-flex-item-align: $align;
  @include prefix(align-self, $align, webkit spec);
}

@mixin justify-content($justify: flex-start) {
  @include prefix(justify-content, $justify, webkit ms spec);
}

/*================ #Clear Fix ================*/

@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  *zoom: 1;
}

/*Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss
==============================================================================*/
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin center-wrapper() {
  width: $grid-xlarge;
  margin: 0 auto;
}

@mixin banner-image() {
  &__image {
    height: 563px;

    picture {
      @include display-flexbox();
      @include justify-content(center);
      height: 100%;

      img {
        object-fit: cover;
        height: auto;
        width: 100%;
      }
    }
  }
}

@mixin banner-text() {
  &__text {
    position: absolute;
    z-index: 1;
    height: 100%;
    width: 600px;
    left: 10%;
    top: 0;

    &-wrapper {
      height: 100%;
      @include display-flexbox();
      @include justify-content(center);
      @include flex-direction(column);
    }

    h1 {
      font-size: 3em;
      font-family: GothamBookMedium, sans-serif;
      padding-bottom: 0.3em;
      color: white;
      line-height: 1.2em;
    }

    h2 {
      font-size: 2em;
      padding-bottom: 1em;
      line-height: 1.2em;
      color: white;
    }

    p {
      font-size: 1.2em;
      padding-bottom: 1em;
      color: white;
    }

    ul {
      list-style: none;
      li {
        @include display-flexbox();
        @include circle-bullets(white);
        padding-bottom: 0.8em;
      }
    }

    a {
      background-color: white;
      padding: 10px 30px;
      border-radius: 30px;
      display: inline-block;
      color: $slider-btn-color;
      text-decoration: none;
      font-weight: 900;
      transition: transform 100ms ease-out;

      &:hover {
        transform: scale(1.02);
      }
    }

    @include media-query($medium-down) {
      width: 100%;
      left: 0;
      top: 0;
      padding: 2.4em 1.8em 0;

      &-wrapper {
        @include justify-content(flex-start);
      }
      h1 {
        font-size: 1.6em;
        font-weight: 900;
      }
      p {
        font-size: 0.8em;
      }
    }
  }
}

@mixin circle-bullets($color: $base-color) {
  &::before {
    content: "\26AC";
    color: $color;
    display: inline-block;
    padding-right: 0.8em;
    margin-top: -2px;
  }
}

@mixin button() {
  padding: 10px 30px;
  border-radius: 30px;
  display: inline-block;
  text-transform: capitalize;
  background-color: darken($base-color, 5);
  color: white;
  font-weight: 800;

  &:hover {
    background-color: $button-hover-color;
  }
}

@mixin generic-box-shadow() {
  -webkit-box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 10px;
  -moz-box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 10px;
  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 10px;
}

@mixin contributed-by($color: $black) {
  color: $color;
  font-size: 0.8em;
  line-height: 1em;

  strong {
    display: inline;
    font-size: inherit;
    color: inherit;
  }

  p {
    padding: 0;
    margin: 0;
  }
}
