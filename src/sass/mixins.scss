@mixin prefix($property, $value, $prefixes) {
    @each $prefix in $prefixes {
      @if $prefix == webkit {
        -webkit-#{$property}: $value;
      } @else if $prefix == moz {
        -moz-#{$property}: $value;
      } @else if $prefix == ms {
        -ms-#{$property}: $value;
      } @else if $prefix == o {
        -o-#{$property}: $value;
      } @else if $prefix == spec {
        #{$property}: $value;
      } @else  {
        @warn "Unrecognized prefix: #{$prefix}";
      }
    }
  }

/*============================================================================
  #Media Query Mixin
==============================================================================*/


@mixin media-query($media-query) {
    $breakpoint-found: false;
  
    @each $breakpoint in $grid-breakpoints {
      $name: nth($breakpoint, 1);
      $declaration: nth($breakpoint, 2);
  
      @if $media-query == $name and $declaration {
        $breakpoint-found: true;
  
        @media only screen and #{$declaration} {
          @content;
        }
      }
    }
  
    @if $breakpoint-found == false {
      @warn "Breakpoint '#{$media-query}' does not exist";
    }
  }

/*============================================================================
  Flexbox prefix mixins from Bourbon
    https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_flex-box.scss
==============================================================================*/
@mixin display-flexbox() {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%; // necessary for ie10
  }
  
  @mixin flex-wrap($value: nowrap) {
    @include prefix(flex-wrap, $value, webkit moz ms spec);
  }
  
  @mixin flex-direction($value) {
    @include prefix(flex-direction, $value, webkit moz ms spec);
  }
  
  @mixin align-items($value: stretch) {
    $alt-value: $value;
  
    @if $value == 'flex-start' {
      $alt-value: start;
    } @else if $value == 'flex-end' {
      $alt-value: end;
    }
  
    // sass-lint:disable no-misspelled-properties
    -ms-flex-align: $alt-value;
    @include prefix(align-items, $value, webkit moz ms o spec);
  }
  
  @mixin flex($value) {
    @include prefix(flex, $value, webkit moz ms spec);
  }
  
  @mixin flex-basis($width: auto) {
    // sass-lint:disable no-misspelled-properties
    -ms-flex-preferred-size: $width;
    @include prefix(flex-basis, $width, webkit moz spec);
  }
  
  @mixin align-self($align: auto) {
    // sass-lint:disable no-misspelled-properties
    -ms-flex-item-align: $align;
    @include prefix(align-self, $align, webkit spec);
  }
  
  @mixin justify-content($justify: flex-start) {
    @include prefix(justify-content, $justify, webkit ms spec);
  }

/*================ #Clear Fix ================*/

@mixin clearfix() {
    &:after {
      content: '';
      display: table;
      clear: both;
    }
  
    *zoom: 1;
  }

/*Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss
==============================================================================*/
  @mixin prefix($property, $value, $prefixes) {
    @each $prefix in $prefixes {
      @if $prefix == webkit {
        -webkit-#{$property}: $value;
      } @else if $prefix == moz {
        -moz-#{$property}: $value;
      } @else if $prefix == ms {
        -ms-#{$property}: $value;
      } @else if $prefix == o {
        -o-#{$property}: $value;
      } @else if $prefix == spec {
        #{$property}: $value;
      } @else  {
        @warn "Unrecognized prefix: #{$prefix}";
      }
    }
  }
  
  
  @mixin center-wrapper() {
    width: $grid-widescreen;
    margin: 0 auto;  
  }
  

  @mixin banner-text() {
    &__text {
      position: absolute;
      z-index: 1;
      height: 100%;
      left: 15%;
  
      &-wrapper {
        height: 100%;
        @include display-flexbox();
        @include justify-content(center);
        @include flex-direction(column);
      }
  
      h1 {
        font-size: 3em;
        font-family: GothamBookMedium, sans-serif;
        padding-bottom: 0.5em;
        color: white;
        line-height: 1.2em;
  
      }
  
      h2 {
        font-size: 2.0em;
        padding-bottom: 1.0em;
        color: white;
      }

      p {
        font-size: 1.2em;
        padding-bottom: 1.0em;
        color: white;
      }

      ul {
        list-style: circle;

        li {
          padding-bottom: 0.8em;

          &:last-child {
            padding-bottom: 0em;
          }
        }
      }
  
      a {
        background-color: white;
        padding: 15px 30px;
        border-radius: 30px;
        display: inline-block;
        color: $base-color;
        text-decoration: none;
      }
    }
  }

  @mixin circle-bullets($color: $base-color) {
    &::before {
      content: "\26AC";  
      color: $color; 
      display: inline-block;
      padding-right: 0.8em;
    }
  }